{"version":3,"sources":["store/types.js","store/reducers/appReducer.js","store/reducers/index.js","store/index.js","utils/shuffleArray.js","store/actions/appActions.js","store/actions/index.js","hooks/useActions.js","components/Timer.js","utils/setTime.js","components/Statistics.js","components/Card.js","components/Field.js","components/Backdrop.js","App.js","reportWebVitals.js","index.js"],"names":["SET_BEGIN_GAME","SET_END_GAME","SET_MESSAGE","SET_TIMER","SET_DISPLAYED_CARDS","SET_FLIPED_CARDS","SET_TEMP_CARDS","SET_COUNTER","initialState","icons","id","className","beginGame","endGame","message","timer","displayedCards","flipedCards","tempCards","counter","victories","defeats","setBeginGame","type","setEndGame","setMessage","payload","setTimer","setDisplayedCards","cards","setFlipedCards","setTempCards","setCounter","rootReducer","combineReducers","app","state","action","store","createStore","applyMiddleware","thunk","shuffleArray","array","min","max","result","length","random","Math","floor","element","splice","push","initCards","dispatch","getState","iconsArray","randomArray","startGame","finalCountdown","flipCard","cardIdx","spliceFlipedCards","filter","card","indexOf","resetTempCards","overGame","includes","obj","resetGame","appActions","useActions","useDispatch","bindActionCreators","actions","Timer","useSelector","time","sec","useEffect","interval","setInterval","clearInterval","onClick","disabled","Statistics","Card","useState","fliped","setFliped","index","Field","timeout","setTimeout","clearTimeout","firstChoose","secondChoose","map","Backdrop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mrBAAaA,EAAiB,iBACjBC,EAAe,eACfC,EAAc,cACdC,EAAY,YACZC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAc,cCIrBC,EAAe,CACnBC,MAAO,CACL,CAAEC,GAAI,EAAGC,UAAW,cACpB,CAAED,GAAI,EAAGC,UAAW,uBACpB,CAAED,GAAI,EAAGC,UAAW,eACpB,CAAED,GAAI,EAAGC,UAAW,cACpB,CAAED,GAAI,EAAGC,UAAW,eACpB,CAAED,GAAI,EAAGC,UAAW,iBACpB,CAAED,GAAI,EAAGC,UAAW,eACpB,CAAED,GAAI,EAAGC,UAAW,kBACpB,CAAED,GAAI,EAAGC,UAAW,eACpB,CAAED,GAAI,GAAIC,UAAW,eACrB,CAAED,GAAI,GAAIC,UAAW,iBACrB,CAAED,GAAI,GAAIC,UAAW,qBACrB,CAAED,GAAI,GAAIC,UAAW,gBACrB,CAAED,GAAI,GAAIC,UAAW,gBACrB,CAAED,GAAI,GAAIC,UAAW,qBACrB,CAAED,GAAI,GAAIC,UAAW,oBACrB,CAAED,GAAI,GAAIC,UAAW,uBACrB,CAAED,GAAI,GAAIC,UAAW,gBAEvBC,WAAW,EACXC,SAAS,EACTC,QAAS,GACTC,MAAO,IACPC,eAAgB,GAChBC,YAAa,GACbC,UAAW,GACXC,QAAS,CAAEC,UAAW,EAAGC,QAAS,IAkDvBC,EAAe,iBAAO,CACjCC,KAAMvB,IAGKwB,EAAa,iBAAO,CAC/BD,KAAMtB,IAGKwB,EAAa,SAACX,GAAD,MAAc,CACtCS,KAAMrB,EACNwB,QAASZ,IAGEa,EAAW,SAACZ,GAAD,MAAY,CAClCQ,KAAMpB,EACNuB,QAASX,IAGEa,EAAoB,SAACC,GAAD,MAAY,CAC3CN,KAAMnB,EACNsB,QAASG,IAGEC,EAAiB,SAACD,GAAD,MAAY,CACxCN,KAAMlB,EACNqB,QAASG,IAGEE,EAAe,SAACF,GAAD,MAAY,CACtCN,KAAMjB,EACNoB,QAASG,IAGEG,EAAa,SAACb,GAAD,MAAc,CACtCI,KAAMhB,EACNmB,QAASP,ICzHEc,EAAcC,YAAgB,CACzCC,IDsCwB,WAAmC,IAAlCC,EAAiC,uDAAzB5B,EAAc6B,EAAW,uCAC1D,OAAQA,EAAOd,MACb,KAAKvB,EACH,OAAO,2BACFoC,GADL,IAEExB,WAAYwB,EAAMxB,YAEtB,KAAKX,EACH,OAAO,2BACFmC,GADL,IAEEvB,SAAUuB,EAAMvB,UAEpB,KAAKX,EACH,OAAO,2BACFkC,GADL,IAEEtB,QAASuB,EAAOX,UAEpB,KAAKvB,EACH,OAAO,2BACFiC,GADL,IAEErB,MAAOsB,EAAOX,UAElB,KAAKtB,EACH,OAAO,2BACFgC,GADL,IAEEpB,eAAgBqB,EAAOX,UAE3B,KAAKrB,EACH,OAAO,2BACF+B,GADL,IAEEnB,YAAaoB,EAAOX,UAExB,KAAKpB,EACH,OAAO,2BACF8B,GADL,IAEElB,UAAWmB,EAAOX,UAEtB,KAAKnB,EACH,OAAO,2BACF6B,GADL,IAEEjB,QAASkB,EAAOX,UAEpB,QACE,OAAOU,MEjFAE,EAAQC,YAAYN,EAAaO,YAAgBC,M,OCAjDC,EAAe,SAACC,GAG3B,IAFA,IALqBC,EAAKC,EAKpBC,EAAS,GAERH,EAAMI,OAAS,GAAG,CACvB,IAAIC,GAReJ,EAQQ,EARHC,EAQMF,EAAMI,OAAS,EAPxCE,KAAKC,MAAMD,KAAKD,UAAYH,EAAMD,EAAM,GAAKA,IAQ9CO,EAAUR,EAAMS,OAAOJ,EAAQ,GAAG,GAEtCF,EAAOO,KAAKF,GAGd,OAAOL,GCDIQ,EAAY,kBAAM,SAACC,GAAc,IACpC9C,EAAU6B,EAAMkB,WAAWrB,IAA3B1B,MAEFgD,EAAU,sBAAOhD,GAAP,YAAiBA,IAC3BiD,EAAchB,EAAae,GAEjCF,EAAS3B,EAAkB8B,MAGhBC,EAAY,kBAAM,SAACJ,GAC9BA,EAASjC,OAGEsC,EAAiB,SAAC7C,GAAD,OAAW,SAACwC,GACxCA,EAAS5B,EAASZ,MAGP8C,EAAW,SAACC,GAAD,OAAa,SAACP,GAAc,IAAD,EACdjB,EAAMkB,WAAWrB,IAA5ClB,EADyC,EACzCA,YAAaC,EAD4B,EAC5BA,UAErBqC,EAASzB,EAAe,GAAD,mBAAKb,GAAL,CAAkB6C,MACzCP,EAASxB,EAAa,GAAD,mBAAKb,GAAL,CAAgB4C,QAG1BC,EAAoB,kBAAM,SAACR,GAAc,IAAD,EAChBjB,EAAMkB,WAAWrB,IAA5ClB,EAD2C,EAC3CA,YAAaC,EAD8B,EAC9BA,UAEfW,EAAQZ,EAAY+C,QAAO,SAACC,GAChC,OAAoC,IAA7B/C,EAAUgD,QAAQD,MAG3BV,EAASzB,EAAeD,IACxB0B,EAASxB,EAAa,OAGXoC,EAAiB,kBAAM,SAACZ,GACnCA,EAASxB,EAAa,OAGXqC,EAAW,SAACtD,GAAD,OAAa,SAACyC,GAAc,IAC1CpC,EAAYmB,EAAMkB,WAAWrB,IAA7BhB,QAER,GAAIL,EAAQuD,SAAS,OAAQ,CAC3B,IAAMC,EAAG,2BAAQnD,GAAR,IAAiBC,UAAWD,EAAQC,UAAY,IACzDmC,EAASvB,EAAWsC,IAGtB,GAAIxD,EAAQuD,SAAS,QAAS,CAC5B,IAAMC,EAAG,2BAAQnD,GAAR,IAAiBE,QAASF,EAAQE,QAAU,IACrDkC,EAASvB,EAAWsC,IAGtBf,EAAS/B,KACT+B,EAAS9B,EAAWX,MAGTyD,EAAY,kBAAM,SAAChB,GAAc,IACpC9C,EAAU6B,EAAMkB,WAAWrB,IAA3B1B,MAEFgD,EAAU,sBAAOhD,GAAP,YAAiBA,IAC3BiD,EAAchB,EAAae,GAEjCF,EAASjC,KACTiC,EAAS/B,KACT+B,EAAS9B,EAAW,KACpB8B,EAAS5B,EAAS,MAClB4B,EAAS3B,EAAkB8B,IAC3BH,EAASzB,EAAe,KACxByB,EAASxB,EAAa,OC9ET,iBACVyC,GCAQC,EAAa,WACxB,IAAMlB,EAAWmB,cAEjB,OAAOC,YAAmBC,EAASrB,I,eCoCtBsB,EArCD,WAAO,ICNG1D,EDMJ,EACoB2D,aAAY,SAAC1C,GAAD,OAAWA,EAAMD,OAA3DvB,EADU,EACVA,UAAWC,EADD,EACCA,QAASE,EADV,EACUA,MADV,EAE8B0D,IAAxCd,EAFU,EAEVA,UAAWS,EAFD,EAECA,SAAUR,EAFX,EAEWA,eAEvBmB,GCVgB5D,EDUDJ,ECNd,CAAE6B,IAHGK,KAAKC,MAAM/B,EAAU,IAGnB6D,IAFF7D,EAAU,GAAK,EAAIA,EAAU,GAA7B,WAAsCA,EAAU,MD2B5D,OAjBA8D,qBAAU,WACR,GAAKrE,IAAaC,EAAlB,CAEA,IAAMqE,EAAWC,aAAY,WAO3B,OANIpE,EAAQ,EACV6C,EAAe7C,EAAQ,GAEvBqD,EAAS,aAGJgB,cAAcF,KACpB,KAEH,OAAO,kBAAME,cAAcF,OAE1B,CAACtE,EAAWC,EAASE,IAGtB,sBAAKJ,UAAU,QAAf,UACE,sBAAMA,UAAU,cAAhB,mBAAkCoE,EAAKnC,IAAvC,YAA8CmC,EAAKC,OACnD,wBACErE,UAAU,gBACV0E,QAAS1B,EACT2B,SAAU1E,EAHZ,SAKGA,EAAY,YAAc,cEzBpB2E,G,MARI,WAAO,IAChBpE,EAAY2D,aAAY,SAAC1C,GAAD,OAAWA,EAAMD,OAAzChB,QAER,OACE,qBAAKR,UAAU,aAAf,6BAA0CQ,EAAQC,UAAlD,oBAAuED,EAAQE,a,QCuCpEmE,G,MA1CF,SAAC,GAAc,IAAZvB,EAAW,EAAXA,KAAW,EACUa,aAAY,SAAC1C,GAAD,OAAWA,EAAMD,OAAxDvB,EADiB,EACjBA,UAAWK,EADM,EACNA,YADM,EAEGwE,oBAAS,GAFZ,mBAElBC,EAFkB,KAEVC,EAFU,KAGjB9B,EAAaY,IAAbZ,SA0BR,OAnBAoB,qBAAU,WACHrE,IAEDK,EAAYoD,SAASJ,EAAK2B,OAC5BD,GAAU,GAEVA,GAAU,MAGX,CAAC/E,EAAWK,IAEfgE,qBAAU,WAENU,GADE/E,KAKH,CAACA,IAGF,sBACED,UAAW+E,EAAS,iBAAmB,OACvCL,QAAS,kBA3BSvB,EA2BUG,EAAK2B,WA1B/BF,GACJ7B,EAASC,IAFU,IAACA,GAyBpB,UAIE,qBAAKnD,UAAU,cAAf,iBACA,qBAAKA,UAAU,aAAf,SACE,mBAAGA,UAAWsD,EAAKtD,mBCcZkF,G,MAjDD,WAAO,IAAD,EACiCf,aACjD,SAAC1C,GAAD,OAAWA,EAAMD,OADXnB,EADU,EACVA,eAAgBC,EADN,EACMA,YAAaC,EADnB,EACmBA,UADnB,EASduD,IAJFnB,EALgB,EAKhBA,UACAS,EANgB,EAMhBA,kBACAI,EAPgB,EAOhBA,eACAC,EARgB,EAQhBA,SAgCF,OA7BAa,qBAAU,WACR3B,MAEC,IAEH2B,qBAAU,WACR,GAAyB,IAArB/D,EAAU6B,OAAc,CAC1B,IAAM+C,EAAUC,YAAW,kBAAMhC,MAAqB,KACtD,OAAO,kBAAMiC,aAAaF,IAG5B,GAAI5E,EAAU6B,QAAU,EAAG,CACzB,IAAMkD,EAAc/E,EAAU,GACxBgF,EAAehF,EAAU,GAE/B,GAAIF,EAAeiF,GAAavF,KAAOM,EAAekF,GAAcxF,GAAI,CACtE,IAAMoF,EAAUC,YAAW,kBAAMhC,MAAqB,KACtD,OAAO,kBAAMiC,aAAaF,IAEtB7E,EAAY8B,SAAW/B,EAAe+B,QACxCqB,EAAS,YAGXD,OAIH,CAAClD,IAGF,qBAAKN,UAAU,QAAf,SACGK,EAAemF,KAAI,SAAClC,EAAM2B,GAAP,OAClB,cAAC,EAAD,CAAkB3B,KAAI,aAAI2B,SAAU3B,IAAzB2B,UC5BJQ,G,MAhBE,WAAO,IACdtF,EAAYgE,aAAY,SAAC1C,GAAD,OAAWA,EAAMD,OAAzCrB,QACAyD,EAAcE,IAAdF,UAER,OACE,qBAAK5D,UAAU,WAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCG,IACjC,wBAAQH,UAAU,mBAAmB0E,QAASd,EAA9C,+BCOO8B,G,MAbH,WAAO,IACTxF,EAAYiE,aAAY,SAAC1C,GAAD,OAAWA,EAAMD,OAAzCtB,QAER,OACE,sBAAKF,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACCE,GAAW,cAAC,EAAD,SCHHyF,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAD,CAAU1E,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEF2E,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.a04f6e4b.chunk.js","sourcesContent":["export const SET_BEGIN_GAME = 'SET_BEGIN_GAME'\r\nexport const SET_END_GAME = 'SET_END_GAME'\r\nexport const SET_MESSAGE = 'SET_MESSAGE'\r\nexport const SET_TIMER = 'SET_TIMER'\r\nexport const SET_DISPLAYED_CARDS = 'SET_DISPLAYED_CARDS'\r\nexport const SET_FLIPED_CARDS = 'SET_FLIPED_CARDS'\r\nexport const SET_TEMP_CARDS = 'SET_TEMP_CARDS'\r\nexport const SET_COUNTER = 'SET_COUNTER'\r\n","import {\r\n  SET_BEGIN_GAME,\r\n  SET_END_GAME,\r\n  SET_MESSAGE,\r\n  SET_TIMER,\r\n  SET_DISPLAYED_CARDS,\r\n  SET_FLIPED_CARDS,\r\n  SET_TEMP_CARDS,\r\n  SET_COUNTER,\r\n} from '../types'\r\n\r\nconst initialState = {\r\n  icons: [\r\n    { id: 1, className: 'fas fa-cat' },\r\n    { id: 2, className: 'fas fa-compact-disc' },\r\n    { id: 3, className: 'fas fa-crow' },\r\n    { id: 4, className: 'fas fa-dog' },\r\n    { id: 5, className: 'fas fa-dove' },\r\n    { id: 6, className: 'fas fa-dragon' },\r\n    { id: 7, className: 'fas fa-drum' },\r\n    { id: 8, className: 'fas fa-feather' },\r\n    { id: 9, className: 'fas fa-fish' },\r\n    { id: 10, className: 'fas fa-frog' },\r\n    { id: 11, className: 'fas fa-guitar' },\r\n    { id: 12, className: 'fas fa-headphones' },\r\n    { id: 13, className: 'fas fa-hippo' },\r\n    { id: 14, className: 'fas fa-horse' },\r\n    { id: 15, className: 'fas fa-microphone' },\r\n    { id: 16, className: 'fas fa-kiwi-bird' },\r\n    { id: 17, className: 'fas fa-record-vinyl' },\r\n    { id: 18, className: 'fas fa-play' },\r\n  ],\r\n  beginGame: false,\r\n  endGame: false,\r\n  message: '',\r\n  timer: 180,\r\n  displayedCards: [],\r\n  flipedCards: [],\r\n  tempCards: [],\r\n  counter: { victories: 0, defeats: 0 },\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_BEGIN_GAME:\r\n      return {\r\n        ...state,\r\n        beginGame: !state.beginGame,\r\n      }\r\n    case SET_END_GAME:\r\n      return {\r\n        ...state,\r\n        endGame: !state.endGame,\r\n      }\r\n    case SET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: action.payload,\r\n      }\r\n    case SET_TIMER:\r\n      return {\r\n        ...state,\r\n        timer: action.payload,\r\n      }\r\n    case SET_DISPLAYED_CARDS:\r\n      return {\r\n        ...state,\r\n        displayedCards: action.payload,\r\n      }\r\n    case SET_FLIPED_CARDS:\r\n      return {\r\n        ...state,\r\n        flipedCards: action.payload,\r\n      }\r\n    case SET_TEMP_CARDS:\r\n      return {\r\n        ...state,\r\n        tempCards: action.payload,\r\n      }\r\n    case SET_COUNTER:\r\n      return {\r\n        ...state,\r\n        counter: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setBeginGame = () => ({\r\n  type: SET_BEGIN_GAME,\r\n})\r\n\r\nexport const setEndGame = () => ({\r\n  type: SET_END_GAME,\r\n})\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n})\r\n\r\nexport const setTimer = (timer) => ({\r\n  type: SET_TIMER,\r\n  payload: timer,\r\n})\r\n\r\nexport const setDisplayedCards = (cards) => ({\r\n  type: SET_DISPLAYED_CARDS,\r\n  payload: cards,\r\n})\r\n\r\nexport const setFlipedCards = (cards) => ({\r\n  type: SET_FLIPED_CARDS,\r\n  payload: cards,\r\n})\r\n\r\nexport const setTempCards = (cards) => ({\r\n  type: SET_TEMP_CARDS,\r\n  payload: cards,\r\n})\r\n\r\nexport const setCounter = (counter) => ({\r\n  type: SET_COUNTER,\r\n  payload: counter,\r\n})\r\n","import { combineReducers } from 'redux'\r\nimport { appReducer } from './appReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  app: appReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers/index'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n","const getRandomInit = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nexport const shuffleArray = (array) => {\r\n  const result = []\r\n\r\n  while (array.length > 0) {\r\n    let random = getRandomInit(0, array.length - 1)\r\n    let element = array.splice(random, 1)[0]\r\n\r\n    result.push(element)\r\n  }\r\n\r\n  return result\r\n}\r\n","import { store } from '../index'\r\nimport {\r\n  setBeginGame,\r\n  setEndGame,\r\n  setMessage,\r\n  setTimer,\r\n  setDisplayedCards,\r\n  setFlipedCards,\r\n  setTempCards,\r\n  setCounter,\r\n} from '../reducers/appReducer'\r\nimport { shuffleArray } from '../../utils/shuffleArray'\r\n\r\nexport const initCards = () => (dispatch) => {\r\n  const { icons } = store.getState().app\r\n\r\n  const iconsArray = [...icons, ...icons]\r\n  const randomArray = shuffleArray(iconsArray)\r\n\r\n  dispatch(setDisplayedCards(randomArray))\r\n}\r\n\r\nexport const startGame = () => (dispatch) => {\r\n  dispatch(setBeginGame())\r\n}\r\n\r\nexport const finalCountdown = (timer) => (dispatch) => {\r\n  dispatch(setTimer(timer))\r\n}\r\n\r\nexport const flipCard = (cardIdx) => (dispatch) => {\r\n  const { flipedCards, tempCards } = store.getState().app\r\n\r\n  dispatch(setFlipedCards([...flipedCards, cardIdx]))\r\n  dispatch(setTempCards([...tempCards, cardIdx]))\r\n}\r\n\r\nexport const spliceFlipedCards = () => (dispatch) => {\r\n  const { flipedCards, tempCards } = store.getState().app\r\n\r\n  const cards = flipedCards.filter((card) => {\r\n    return tempCards.indexOf(card) === -1\r\n  })\r\n\r\n  dispatch(setFlipedCards(cards))\r\n  dispatch(setTempCards([]))\r\n}\r\n\r\nexport const resetTempCards = () => (dispatch) => {\r\n  dispatch(setTempCards([]))\r\n}\r\n\r\nexport const overGame = (message) => (dispatch) => {\r\n  const { counter } = store.getState().app\r\n\r\n  if (message.includes('won')) {\r\n    const obj = { ...counter, victories: counter.victories + 1 }\r\n    dispatch(setCounter(obj))\r\n  }\r\n\r\n  if (message.includes('lose')) {\r\n    const obj = { ...counter, defeats: counter.defeats + 1 }\r\n    dispatch(setCounter(obj))\r\n  }\r\n\r\n  dispatch(setEndGame())\r\n  dispatch(setMessage(message))\r\n}\r\n\r\nexport const resetGame = () => (dispatch) => {\r\n  const { icons } = store.getState().app\r\n\r\n  const iconsArray = [...icons, ...icons]\r\n  const randomArray = shuffleArray(iconsArray)\r\n\r\n  dispatch(setBeginGame())\r\n  dispatch(setEndGame())\r\n  dispatch(setMessage(''))\r\n  dispatch(setTimer(180))\r\n  dispatch(setDisplayedCards(randomArray))\r\n  dispatch(setFlipedCards([]))\r\n  dispatch(setTempCards([]))\r\n}\r\n","import * as appActions from './appActions'\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  ...appActions,\r\n}\r\n","import { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport actions from '../store/actions/index'\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  return bindActionCreators(actions, dispatch)\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../hooks/useActions'\r\nimport { setTime } from '../utils/setTime'\r\nimport './Timer.scss'\r\n\r\nconst Timer = () => {\r\n  const { beginGame, endGame, timer } = useSelector((state) => state.app)\r\n  const { startGame, overGame, finalCountdown } = useActions()\r\n\r\n  const time = setTime(timer)\r\n\r\n  useEffect(() => {\r\n    if (!beginGame || endGame) return\r\n\r\n    const interval = setInterval(() => {\r\n      if (timer > 0) {\r\n        finalCountdown(timer - 1)\r\n      } else {\r\n        overGame('You lose!')\r\n      }\r\n\r\n      return clearInterval(interval)\r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n    // eslint-disable-next-line\r\n  }, [beginGame, endGame, timer])\r\n\r\n  return (\r\n    <div className='timer'>\r\n      <span className='timer__time'>{`${time.min}:${time.sec}`}</span>\r\n      <button\r\n        className='timer__button'\r\n        onClick={startGame}\r\n        disabled={beginGame}\r\n      >\r\n        {beginGame ? 'Hurry up!' : 'Start'}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n","export const setTime = (counter) => {\r\n  const min = Math.floor(counter / 60)\r\n  const sec = counter % 60 > 9 ? counter % 60 : `0${counter % 60}`\r\n\r\n  return { min, sec }\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './Statistics.scss'\r\n\r\nconst Statistics = () => {\r\n  const { counter } = useSelector((state) => state.app)\r\n\r\n  return (\r\n    <div className='statistics'>{`Victories:${counter.victories} Defeats:${counter.defeats}`}</div>\r\n  )\r\n}\r\n\r\nexport default Statistics\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../hooks/useActions'\r\nimport './Card.scss'\r\n\r\nconst Card = ({ card }) => {\r\n  const { beginGame, flipedCards } = useSelector((state) => state.app)\r\n  const [fliped, setFliped] = useState(true)\r\n  const { flipCard } = useActions()\r\n\r\n  const handlerClick = (cardIdx) => {\r\n    if (fliped) return\r\n    flipCard(cardIdx)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!beginGame) return\r\n\r\n    if (flipedCards.includes(card.index)) {\r\n      setFliped(true)\r\n    } else {\r\n      setFliped(false)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [beginGame, flipedCards])\r\n\r\n  useEffect(() => {\r\n    if (beginGame) {\r\n      setFliped(false)\r\n    } else {\r\n      setFliped(true)\r\n    }\r\n  }, [beginGame])\r\n\r\n  return (\r\n    <div\r\n      className={fliped ? 'card card_flip' : 'card'}\r\n      onClick={() => handlerClick(card.index)}\r\n    >\r\n      <div className='card__front'>???</div>\r\n      <div className='card__back'>\r\n        <i className={card.className} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../hooks/useActions'\r\nimport Card from './Card'\r\nimport './Field.scss'\r\n\r\nconst Field = () => {\r\n  const { displayedCards, flipedCards, tempCards } = useSelector(\r\n    (state) => state.app\r\n  )\r\n  const {\r\n    initCards,\r\n    spliceFlipedCards,\r\n    resetTempCards,\r\n    overGame,\r\n  } = useActions()\r\n\r\n  useEffect(() => {\r\n    initCards()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (tempCards.length === 1) {\r\n      const timeout = setTimeout(() => spliceFlipedCards(), 5000)\r\n      return () => clearTimeout(timeout)\r\n    }\r\n\r\n    if (tempCards.length >= 2) {\r\n      const firstChoose = tempCards[0]\r\n      const secondChoose = tempCards[1]\r\n\r\n      if (displayedCards[firstChoose].id !== displayedCards[secondChoose].id) {\r\n        const timeout = setTimeout(() => spliceFlipedCards(), 500)\r\n        return () => clearTimeout(timeout)\r\n      } else {\r\n        if (flipedCards.length === displayedCards.length) {\r\n          overGame('You won!')\r\n        }\r\n\r\n        resetTempCards()\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [flipedCards])\r\n\r\n  return (\r\n    <div className='field'>\r\n      {displayedCards.map((card, index) => (\r\n        <Card key={index} card={{ index, ...card }} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Field\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../hooks/useActions'\r\nimport './Backdrop.scss'\r\n\r\nconst Backdrop = () => {\r\n  const { message } = useSelector((state) => state.app)\r\n  const { resetGame } = useActions()\r\n\r\n  return (\r\n    <div className='backdrop'>\r\n      <div className='backdrop__block'>\r\n        <h1 className='backdrop__title'>{message}</h1>\r\n        <button className='backdrop__button' onClick={resetGame}>\r\n          Try again!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Backdrop\r\n","import { useSelector } from 'react-redux'\nimport Timer from './components/Timer'\nimport Statistics from './components/Statistics'\nimport Field from './components/Field'\nimport Backdrop from './components/Backdrop'\nimport './App.scss'\n\nconst App = () => {\n  const { endGame } = useSelector((state) => state.app)\n\n  return (\n    <div className='app'>\n      <Timer />\n      <Statistics />\n      <Field />\n      {endGame && <Backdrop />}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './store/index'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './index.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}